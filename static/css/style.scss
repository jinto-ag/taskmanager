@use "sass:map";

// Key colors START
$primary-key-color: #a33f00;
$secondary-key-color: #77574a;
$tertiary-key-color: #675f30;
$neutral-key-color: #655d59;
$neutral-variant-key-color: #6b5b54;
// Key colors END

// Color palette START
// Primary
$primary-0: #000000;
$primary-10: #360f00;
$primary-20: #581e00;
$primary-30: #7c2e00;
$primary-40: #a33f00;
$primary-50: #c4551a;
$primary-60: #e66e32;
$primary-70: #ff8c56;
$primary-80: #ffb596;
$primary-90: #ffdbcd;
$primary-95: #ffede7;
$primary-99: #fffbff;
$primary-100: #ffffff;
// Secondary
$secondary-0: #000000;
$secondary-10: #2c160c;
$secondary-20: #442a1f;
$secondary-30: #5d4034;
$secondary-40: #77574a;
$secondary-50: #917061;
$secondary-60: #ad897a;
$secondary-70: #c9a393;
$secondary-80: #e6bead;
$secondary-90: #ffdbcd;
$secondary-95: #ffede7;
$secondary-99: #fffbff;
$secondary-100: #ffffff;
// Tertiary
$tertiary-0: #000000;
$tertiary-10: #201c00;
$tertiary-20: #373106;
$tertiary-30: #4e471b;
$tertiary-40: #675f30;
$tertiary-50: #807847;
$tertiary-60: #9b915e;
$tertiary-70: #b6ac76;
$tertiary-80: #d2c78f;
$tertiary-90: #efe3a9;
$tertiary-95: #fdf2b6;
$tertiary-99: #fffbff;
$tertiary-100: #ffffff;
// Error
$error-0: #000000;
$error-10: #410002;
$error-20: #690005;
$error-30: #93000a;
$error-40: #ba1a1a;
$error-50: #de3730;
$error-60: #ff5449;
$error-70: #ff897d;
$error-80: #ffb4ab;
$error-90: #ffdad6;
$error-95: #ffedea;
$error-99: #fffbff;
$error-100: #ffffff;
// Neutral
$neutral-0: #000000;
$neutral-10: #201a18;
$neutral-20: #362f2c;
$neutral-30: #4d4542;
$neutral-40: #655d59;
$neutral-50: #7f7572;
$neutral-60: #998f8b;
$neutral-70: #b4a9a5;
$neutral-80: #d0c4c0;
$neutral-90: #ede0db;
$neutral-95: #fbeeea;
$neutral-99: #fffbff;
$neutral-100: #ffffff;
// Neutrak Variant
$neutral-variant-0: #000000;
$neutral-variant-10: #251914;
$neutral-variant-20: #3b2d28;
$neutral-variant-30: #53443d;
$neutral-variant-40: #6b5b54;
$neutral-variant-50: #85736c;
$neutral-variant-60: #a08d85;
$neutral-variant-70: #bba79f;
$neutral-variant-80: #d8c2ba;
$neutral-variant-90: #f5ded5;
$neutral-variant-95: #ffede7;
$neutral-variant-99: #fffbff;
$neutral-variant-100: #ffffff;
// Surface
$surface-light: $neutral-99; // 100%
$surface-light-variant: $primary-40; // for other surface
$surface-dark: $neutral-10; // 100%
$surface-dark-variant: $primary-80; // for other surface
// Accent colors
$green-light: #72b043;
$green-dark: #007f4e;
$red: #e12729;
$orange: #f37324;
$yellow: #f8cc1b;
$blue: #1b47f8;
$black: black;
$white: white;
$grey: #688394;

@function surface($theme: "light", $context: "0") {
  // This will return surface colors for dark and light
  $color: (
    "light": (
      "0": $surface-light,
      "1": rgba($surface-light-variant, 14%),
      "2": rgba($surface-light-variant, 12%),
      "3": rgba($surface-light-variant, 11%),
      "4": rgba($surface-light-variant, 8%),
      "5": rgba($surface-light-variant, 5%),
    ),
    "dark": (
      "0": $surface-dark,
      "1": rgba($surface-dark-variant, 14%),
      "2": rgba($surface-dark-variant, 12%),
      "3": rgba($surface-dark-variant, 11%),
      "4": rgba($surface-dark-variant, 8%),
      "5": rgba($surface-dark-variant, 5%),
    ),
  );
  $theme: map-get($color, $theme);
  $context: map-get($theme, $context);
  @return $context;
}

// Color palette END
@function get-theme($theme: "light", $context: "primary") {
  $color: (
    "light": (
      // backgroud colors
      "primary": $primary-40,
      "secondary": $secondary-40,
      "tertiary": $tertiary-40,
      "error": $error-40,
      "background": $neutral-99,
      "surface": $neutral-99,
      "surface-variant": $neutral-variant-90,
      // on backgroud colors
      "on-primary": $primary-100,
      "on-secondary": $secondary-100,
      "on-tertiary": $tertiary-100,
      "on-error": $error-100,
      "on-background": $neutral-0,
      "on-surface": $neutral-10,
      "on-surface-variant": $neutral-variant-30,
      // backgroud colors
      "primary-container": $primary-90,
      "secondary-container": $secondary-90,
      "tertiary-container": $tertiary-90,
      "error-container": $error-90,
      "background-container": $neutral-99,
      "outline": $neutral-variant-50,
      // on backgroud colors
      "on-primary-container": $primary-10,
      "on-secondary-container": $secondary-10,
      "on-tertiary-container": $tertiary-10,
      "on-error-container": $error-10,
      //   contextual colors
      "success": $green-light,
      "danger": $red,
      "warning": $yellow,
      "info": $blue,
      "dark": $primary-10,
      "light": $primary-90,
      //   surface colors
      "surface-1": surface("light", "1"),
      "surface-2": surface("light", "2"),
      "surface-3": surface("light", "3"),
      "surface-4": surface("light", "4"),
      "surface-5": surface("light", "5"),
    //   states background
    "primary-hover": $primary-30,
    "secondary-hover": $secondary-30,
    "tertiary-hover": $tertiary-30,
    "error-hover": $error-30,
    //   states on color
    "on-primary-hover": $primary-90,
    "on-secondary-hover": $secondary-90,
    "on-tertiary-hover": $tertiary-90,
    "on-error-hover": $error-90,

    ),
    "dark": (
      // backgroud colors
      "primary": $primary-80,
      "secondary": $secondary-80,
      "tertiary": $tertiary-80,
      "error": $error-80,
      "background": $neutral-10,
      "surface": $neutral-10,
      "surface-variant": $neutral-variant-30,
      // on backgroud colors
      "on-primary": $primary-20,
      "on-secondary": $secondary-20,
      "on-tertiary": $tertiary-20,
      "on-error": $error-20,
      "on-background": $neutral-90,
      "on-surface": $neutral-80,
      "on-surface-variant": $neutral-variant-80,
      // backgroud colors
      "primary-container": $primary-30,
      "secondary-container": $secondary-30,
      "tertiary-container": $tertiary-30,
      "error-container": $error-30,
      "background-container": $neutral-99,
      "outline": $neutral-variant-60,
      // on backgroud colors
      "on-primary-container": $primary-90,
      "on-secondary-container": $secondary-90,
      "on-tertiary-container": $tertiary-90,
      "on-error-container": $error-90,
      //   contextual colors
      "success": $green-dark,
      "danger": $red,
      "warning": $yellow,
      "info": $blue,
      "dark": $primary-10,
      "light": $primary-90,
      //   surface colors
      "surface-1": surface("dark", "1"),
      "surface-2": surface("dark", "2"),
      "surface-3": surface("dark", "3"),
      "surface-4": surface("dark", "4"),
      "surface-5": surface("dark", "5"),
      //   states
    "primary-hover": $primary-90,
    "secondary-hover": $secondary-90,
    "tertiary-hover": $tertiary-90,
    "error-hover": $error-90,
    // on color
    "on-primary-hover": $primary-30,
    "on-secondary-hover": $secondary-30,
    "on-tertiary-hover": $tertiary-30,
    "on-error-hover": $error-30,
    ),
  );

  $color: map-get($color, $theme);
  $context: map-get($color, $context);
  @return $context;
}

@mixin get-theme-color($theme: "light", $context:"primary") {
  background-color: get-theme($theme, $context);
  color: get-theme($theme, "on-#{$context}");
  border: 1px solid get-theme($theme, "#{$context}");
  &:hover{
    background-color: get-theme($theme, "#{$context}-hover");
    color: get-theme($theme, "on-#{$context}-hover");
    border: 1px solid get-theme($theme, "#{$context}-hover");
  }
}

body.light {
    $theme:"light";
    .btn-primary {@include get-theme-color($theme, "primary");}
    .btn-secondary {@include get-theme-color($theme, "secondary");}
    .btn-success {@include get-theme-color($theme, "success");}
    .btn-danger {@include get-theme-color($theme, "danger");}
    .btn-warning {@include get-theme-color($theme, "warning");}
    .btn-info {@include get-theme-color($theme, "info");}
    .btn-error {@include get-theme-color($theme, "error");}
}

body.dark {
    $theme:"dark";
    .btn-primary {@include get-theme-color($theme, "primary");}
    .btn-secondary {@include get-theme-color($theme, "secondary");}
    .btn-success {@include get-theme-color($theme, "success");}
    .btn-danger {@include get-theme-color($theme, "danger");}
    .btn-warning {@include get-theme-color($theme, "warning");}
    .btn-info {@include get-theme-color($theme, "info");}
    .btn-error {@include get-theme-color($theme, "error");}
}